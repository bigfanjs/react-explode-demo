{"version":3,"sources":["context/Explosion.js","components/Icons/Hamburger.jsx","pages/SingleExplosion/styles.js","pages/SingleExplosion/SingleExplosionForm.jsx","pages/SingleExplosion/Menu.jsx","pages/SingleExplosion/SingleExplosion.jsx","pages/All/styles.js","pages/All/All.jsx","registerServiceWorker.js","index.js","App.js"],"names":["Context","createContext","Hamburger","width","height","color","viewBox","fill","d","Container","styled","div","FormWrapper","Label","label","Input","Field","Submit","input","Select","select","Menu","isOpen","MenuContent","MenuBody","BodySection","section","Button","button","field","onChange","e","preventDefault","target","value","name","Object","keys","explosions","map","id","key","SingleExplosionForm","useContext","explosion","setExplosion","htmlFor","as","component","type","defaultValue","useState","setIsOpen","handleSubmit","useCallback","data","onClick","onSubmit","initialValues","SingleExplosion","size","delay","repeat","repeatDelay","Explosion","Grid","GridItem","Explosions","All","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","children","Provider","path","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.81307f9d.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const Context = createContext({});\n\nexport default function Explosion({ children }) {\n  const [explosion, setExplosion] = useState({\n    name: \"Boracay\",\n    size: 400,\n    delay: 0,\n    repeatDelay: 0,\n    repeat: 500\n  });\n\n  return (\n    <Context.Provider value={{ explosion, setExplosion }}>\n      {children}\n    </Context.Provider>\n  );\n}\n","import React from \"react\";\n\nexport default function Hamburger({ width = 32, height = 32, color = \"#fff\" }) {\n  return (\n    <svg viewBox=\"0 0 32 32\" width={width} height={height}>\n      <path\n        fill={color}\n        d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"\n      />\n    </svg>\n  );\n}\n","import styled from \"styled-components\";\nimport { Field } from \"formik\";\n\nexport const Container = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  display: flex;\n`;\n\nexport const FormWrapper = styled.div``;\n\nexport const Label = styled.label`\n  color: #fff;\n  display: block;\n  color: #000;\n  font-size: 12px;\n`;\n\nexport const Input = styled(Field)`\n  width: 50px;\n  border: none;\n  padding: 5px;\n  width: 100%;\n  margin-bottom: 20px;\n  background-color: #ededed;\n`;\n\nexport const Submit = styled.input`\n  border: none;\n  padding: 5px 24px;\n  cursor: pointer;\n  width: 100%;\n  background-color: #ededed;\n`;\n\nexport const Select = styled.select`\n  padding: 5px;\n  width: 100%;\n  margin-bottom: 10px;\n  color: #db2b3c;\n  font-weight: bold;\n  border-radius: 0;\n  border: none;\n  font-size: 14px;\n  background-color: #ededed;\n`;\n\nexport const Menu = styled.div`\n  width: ${({ isOpen }) => (isOpen ? \"300px\" : \"0\")};\n  height: 100%;\n  position: relative;\n  z-index: 100;\n\n  @media (max-width: 600px) {\n    width: 0;\n    position: static;\n  }\n`;\n\nexport const MenuContent = styled.div`\n  height: 100%;\n  width: 300px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  transform: translate(${({ isOpen }) => (isOpen ? \"0%\" : \"-100%\")});\n  transition: transform 0.2s ease-out;\n\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\n\nexport const MenuHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nexport const MenuBody = styled.div`\n  padding: 10px;\n`;\n\nexport const BodySection = styled.section`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  @media (max-width: 600px) {\n    > div {\n      width: 100%;\n      height: auto;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  position: absolute;\n  left: 100%;\n`;\n","import React, { useContext } from \"react\";\nimport { Form, Field } from \"formik\";\nimport * as explosions from \"react-explode\";\nimport { Context } from \"context/Explosion\";\n\nimport * as styles from \"./styles\";\n\nfunction Select({ field, onChange }) {\n  const handleChange = e => {\n    e.preventDefault();\n    onChange(e.target.value);\n    field.onChange(e);\n  };\n\n  return (\n    <styles.Select\n      onChange={handleChange}\n      value={field.value}\n      name={field.name}\n    >\n      {Object.keys(explosions).map((name, id) => (\n        <option key={id} value={name}>\n          {name}\n        </option>\n      ))}\n    </styles.Select>\n  );\n}\n\nexport default function SingleExplosionForm() {\n  const { explosion, setExplosion } = useContext(Context);\n  const handleExplosionChange = value =>\n    setExplosion({ ...explosion, name: value });\n\n  return (\n    <Form>\n      <styles.FormWrapper>\n        <styles.Label htmlFor=\"type\">Explosion</styles.Label>\n        <Field\n          name=\"name\"\n          as=\"select\"\n          id=\"type\"\n          onChange={handleExplosionChange}\n          component={Select}\n        />\n        <styles.Label htmlFor=\"size\">Size</styles.Label>\n        <styles.Input name=\"size\" name=\"size\" id=\"size\" type=\"number\" />\n        <styles.Label htmlFor=\"delay\">Delay</styles.Label>\n        <styles.Input name=\"delay\" id=\"delay\" type=\"number\" />\n        <styles.Label htmlFor=\"repeatDelay\">RepeatDelay</styles.Label>\n        <styles.Input id=\"repeatDelay\" type=\"number\" name=\"repeatDelay\" />\n        <styles.Label htmlFor=\"repeat\">Repeat</styles.Label>\n        <styles.Input name=\"repeat\" id=\"repeat\" type=\"number\" />\n        <styles.Submit type=\"submit\" defaultValue=\"play\" />\n      </styles.FormWrapper>\n    </Form>\n  );\n}\n","import React, { useState, useContext, useCallback } from \"react\";\nimport { Formik } from \"formik\";\nimport { Context } from \"context/Explosion\";\nimport HamburgerIcon from \"components/Icons/Hamburger\";\nimport SingleExplosionForm from \"./SingleExplosionForm\";\nimport * as styles from \"./styles\";\n\nexport default function Menu() {\n  const { setExplosion, explosion } = useContext(Context);\n\n  const [isOpen, setIsOpen] = useState(true);\n\n  const handleToggleMenu = () => setIsOpen(!isOpen);\n  const handleSubmit = useCallback(\n    data => setExplosion({ ...explosion, ...data }),\n    [setExplosion]\n  );\n\n  return (\n    <styles.Menu isOpen={isOpen}>\n      <styles.MenuContent isOpen={isOpen}>\n        <styles.Button onClick={handleToggleMenu}>\n          <HamburgerIcon />\n        </styles.Button>\n        <styles.MenuBody>\n          <Formik\n            onSubmit={handleSubmit}\n            initialValues={explosion}\n            component={SingleExplosionForm}\n          />\n        </styles.MenuBody>\n      </styles.MenuContent>\n    </styles.Menu>\n  );\n}\n","import React, { useContext } from \"react\";\nimport * as explosions from \"react-explode\";\nimport { Context } from \"context/Explosion\";\nimport Menu from \"./Menu\";\nimport * as styles from \"./styles\";\n\nexport default function SingleExplosion() {\n  const {\n    explosion: { name, size, delay, repeat, repeatDelay }\n  } = useContext(Context);\n\n  const Explosion = explosions[name];\n\n  return (\n    <styles.Container>\n      <Menu />\n      <styles.BodySection>\n        <Explosion\n          size={size}\n          delay={delay}\n          repeatDelay={repeatDelay}\n          repeat={repeat}\n        />\n      </styles.BodySection>\n    </styles.Container>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  /* max-width: 1200px; */\n  padding-left: 25px;\n  padding-right: 25px;\n  margin: 0 auto;\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  justify-content: center;\n  grid-gap: 2%;\n  grid-template-columns: repeat(6, 200px);\n`;\n\nexport const GridItem = styled.div`\n  border: 0.5px solid #1b1b1b;\n  height: 200px;\n  width: 200px;\n  position: relative;\n\n  > div {\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import React from \"react\";\nimport * as explosions from \"react-explode\";\nimport * as styles from \"./styles\";\n\nconst Explosions = Object.keys(explosions).map(key => ({\n  name: key,\n  Explosion: explosions[key]\n}));\n\nexport default function All() {\n  return (\n    <styles.Container>\n      <styles.Grid>\n        {Explosions.map(({ name, Explosion }) => (\n          <styles.GridItem key={name}>\n            <Explosion size=\"200\" delay={0} repeatDelay={0} repeat={500} />\n          </styles.GridItem>\n        ))}\n      </styles.Grid>\n    </styles.Container>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ExplosionProvider from \"context/Explosion\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <ExplosionProvider>\n    <App />\n  </ExplosionProvider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport SingleExplosion from \"pages/SingleExplosion/SingleExplosion\";\nimport All from \"pages/All/All\";\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <SingleExplosion path=\"/\" />\n        <All path=\"/all\" />\n      </Router>\n    </div>\n  );\n}\n"],"sourceRoot":""}